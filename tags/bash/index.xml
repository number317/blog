<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bash on cheon's blog</title><link>https://number317.github.io/blog/tags/bash/</link><description>Recent content in Bash on cheon's blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 11 Apr 2025 16:28:37 +0800</lastBuildDate><atom:link href="https://number317.github.io/blog/tags/bash/index.xml" rel="self" type="application/rss+xml"/><item><title>Interesting Shell Commands</title><link>https://number317.github.io/blog/shell/interesting_shell_commands/</link><pubDate>Wed, 25 Apr 2018 18:16:49 +0800</pubDate><guid>https://number317.github.io/blog/shell/interesting_shell_commands/</guid><description>&lt;h1 id="一些有意思的shell命令">一些有意思的shell命令&lt;/h1>


&lt;div class="code-block code-block-container-indented">
 &lt;pre>&lt;code id="code-ed4813578ade26b8529fbe1ad1481d8f">$ printf &amp;#34;%x&amp;#34; \&amp;#39;$
$ printf \\x2F&lt;/code>&lt;/pre>
 &lt;button class="copy-code-button" onclick="copyCode('code-ed4813578ade26b8529fbe1ad1481d8f', this)" title="copy">
 &lt;i class="fa fa-copy">&lt;/i>
 &lt;/button>
&lt;/div>

&lt;p>将字符转化为16进制(%x), 十进制(%d)&amp;hellip;
第二个命令将16进制转化为字符&lt;/p>


&lt;div class="code-block code-block-container-indented">
 &lt;pre>&lt;code id="code-d0374f15a5c82b377f6ac4ecbe83d9d1">$ python -m SimpleHTTPServer
$ python -m http.server&lt;/code>&lt;/pre>
 &lt;button class="copy-code-button" onclick="copyCode('code-d0374f15a5c82b377f6ac4ecbe83d9d1', this)" title="copy">
 &lt;i class="fa fa-copy">&lt;/i>
 &lt;/button>
&lt;/div>

&lt;p>使用python来建立一个简易的web service用于文件传输，第一个时python2的写法，后一个是python3的写法，默认端口为8000，可以在后面直接加端口指定端口&lt;/p>


&lt;div class="code-block code-block-container-indented">
 &lt;pre>&lt;code id="code-2510bbefece5271028f482c8570924bf">$ nc -l localhost -p 1016
$ nc localhost 1016
$ nc -lu localhost -p 8125
$ nc -u localhost 8125&lt;/code>&lt;/pre>
 &lt;button class="copy-code-button" onclick="copyCode('code-2510bbefece5271028f482c8570924bf', this)" title="copy">
 &lt;i class="fa fa-copy">&lt;/i>
 &lt;/button>
&lt;/div>

&lt;p>&lt;code>gnu-netcat&lt;/code>软件包，使用&lt;code>nc&lt;/code>命令监听1016端口，然后再用&lt;code>nc&lt;/code>可以发送数据，这可以用于文件传输，做简易的聊天工具&lt;/p>


&lt;div class="code-block code-block-container-indented">
 &lt;pre>&lt;code id="code-04ce4ca47815f794a791e24b9838c7f6">curl -OL https://github.com/cmderdev/cmder/releases/download/v1.3.2/cmder.zip
curl -Ss &amp;#34;https://store.docker.com/api/content/v1/repositories/public/library/$@/tags?page_size=25&amp;amp;page=1&amp;#34; | jq &amp;#39;.&amp;#34;results&amp;#34;[][&amp;#34;name&amp;#34;]&amp;#39; | sort -r
curl -X POST -H &amp;#34;Content-Type: application/json&amp;#34; -H &amp;#34;Authorization: Basic YWRtaW46YWRtaW4xMjM=&amp;#34; &amp;#39;http://localhost:8081/service/siesta/rest/v1/script/&amp;#39; \
 -d &amp;#39;{ &amp;#34;name&amp;#34;: &amp;#34;updateAnonymousAccess&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;groovy&amp;#34;, &amp;#34;content&amp;#34;: &amp;#34;security.setAnonymousAccess(Boolean.valueOf(args))&amp;#34; }&amp;#39;&lt;/code>&lt;/pre>
 &lt;button class="copy-code-button" onclick="copyCode('code-04ce4ca47815f794a791e24b9838c7f6', this)" title="copy">
 &lt;i class="fa fa-copy">&lt;/i>
 &lt;/button>
&lt;/div>

&lt;p>第一行命令用于下载文件：&lt;code>-O&lt;/code> 以原文件名字保存，&lt;code>-L&lt;/code> 重定向跟踪，&lt;code>-C&lt;/code> 断点续传，&lt;code>-C -&lt;/code>自动检测断点
第二行命令用于获取docker镜像的tag：&lt;code>-S&lt;/code> 显示错误信息，&lt;code>-s&lt;/code> 静默模式，&lt;code>jq&lt;/code> 命令行的json处理工具
第三行命令用于发送POST请求：&lt;code>-H&lt;/code>指定请求头，&lt;code>-d&lt;/code>指定请求参数，这里是json格式，也可以将数据写入文件，通过&lt;code>-d@data.json&lt;/code> 的形式来传递数据&lt;/p></description></item><item><title>Bash Expansion</title><link>https://number317.github.io/blog/shell/bash_expansion/</link><pubDate>Fri, 13 Oct 2017 13:43:35 +0800</pubDate><guid>https://number317.github.io/blog/shell/bash_expansion/</guid><description>&lt;h1 id="bash-扩展">bash 扩展&lt;/h1></description></item><item><title>Bash Tips</title><link>https://number317.github.io/blog/shell/bash_tips/</link><pubDate>Tue, 10 Oct 2017 11:20:29 +0800</pubDate><guid>https://number317.github.io/blog/shell/bash_tips/</guid><description>&lt;h1 id="bash-代码规范建议">bash 代码规范建议&lt;/h1>
&lt;p>Bash 可以认为是系统编程级的 JavaScript。虽然在某些时候，使用一门像 C，Go 之类的系统语言是一个更好的选择，但是对于一些小的POSIX相关或命令行任务，Bash 是一门理想的系统语言。这里有几个原因：&lt;/p>
&lt;ul>
&lt;li>Bash 无处不在。就像 web 上的 JavaScript，Bash 早就在系统上为系统编程准备好了。&lt;/li>
&lt;li>Bash 可以作为粘合剂。用 C 或 Go （或者其他任意语言）来编写复杂的部分，然后用 Bash 将它们粘合在一起。&lt;/li>
&lt;/ul></description></item></channel></rss>